name: CI/CD Pipeline with GKE & Static Frontend

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

## CICD secrets ${{ secrets.<secret_name> }}
# APP_DOMAIN
# BASIC_AUTH_USERNAME
# BASIC_AUTH_PASSWORD
# GCP_BUCKET_NAME
# GCP_DEFAULT_KMS_KEY
# GCP_KEY_RING_ID
# GCP_PROJECT_ID
# GCP_SA_KEY
# GKE_CLUSTER
# JWT_SECRET_KEY

env:
  GCP_FRONTEND_BUCKET: ${{ secrets.GCP_BUCKET_NAME }}-frontend
  GCP_REGION: europe-central2
  CLUSTER_ZONE: europe-central2-a
  IMAGE: gcs-fastapi-app
  RELEASE_NAME: gcs-fastapi-app
  CHART_PATH: ./helm/gcs-fastapi-app
  TERRAFORM_DIR: terraform
  TERRAFORM_PLAN_FILE: tfplan
#   EMAIL: ${{ secrets.APP_EMAIL }}


jobs:
#   test:
#     name: Run Unit Tests
#     runs-on: ubuntu-latest
#
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
#
#       - name: Set up Python
#         uses: actions/setup-python@v4
#         with:
#           python-version: 3.12
#
#       - name: Install dependencies
#         run: |
#           pip install --upgrade pip
#           pip install -r requirements.txt
#           pip install pytest
#
#       - name: Run tests
#         run: pytest tests/

  terraform:
    name: Deploy Terraform
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.12.2"

      - name: Format
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: terraform fmt -check
        continue-on-error: true

      - name: Init
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: terraform init

      - name: Validate
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: terraform validate

      - name: Test
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: terraform test

      - name: Plan
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: terraform plan -out=${{ env.TERRAFORM_PLAN_FILE }}

      - name: Apply
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: terraform apply -auto-approve {{ env.TERRAFORM_PLAN_FILE }}


  deploy:
    name: Deploy GKE, Static Frontend
    runs-on: ubuntu-latest
    needs: terraform
#     needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev

      - name: Build and Push Docker image # TODO push image sha tag
        run: |
          docker build -t ${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/gcs-fastapi-repo/${{ env.IMAGE }}:$GITHUB_SHA .
          docker push ${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/gcs-fastapi-repo/${{ env.IMAGE }}:$GITHUB_SHA

      - name: Get GKE credentials
        uses: 'google-github-actions/get-gke-credentials@v2'
        with:
          cluster_name: ${{ secrets.GKE_CLUSTER }}
          location: ${{ env.CLUSTER_ZONE }}

      - name: Deploy backend with Helm
        run: |
          helm upgrade \
            --install ${{ env.RELEASE_NAME }} ${{ env.CHART_PATH }} \
            --set image.repository=${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/gcs-fastapi-repo/${{ env.IMAGE }} \
            --set image.tag=$GITHUB_SHA \
            --set secrets.BASIC_AUTH_USERNAME=${{ secrets.BASIC_AUTH_USERNAME }} \
            --set secrets.BASIC_AUTH_PASSWORD=${{ secrets.BASIC_AUTH_PASSWORD }} \
            --set secrets.JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }} \
            --set env.GCP_BUCKET_NAME=${{ secrets.GCP_BUCKET_NAME }} \
            --set env.GCP_DEFAULT_KMS_KEY=${{ secrets.GCP_DEFAULT_KMS_KEY }} \
            --set env.GCP_KEY_RING_ID=${{ secrets.GCP_KEY_RING_ID }} \
            --set env.GCP_PROJECT_ID=${{ secrets.GCP_PROJECT_ID }} \
            --set env.GCP_REGION=${{ env.GCP_REGION }} \
            --set ingress.host=${{ secrets.APP_DOMAIN }}
#             --set ingress.email=${{ env.EMAIL }} \

      - name: Upload static frontend to GCS
        run: |
          gcloud storage cp frontend/* gs://${{ env.GCP_FRONTEND_BUCKET }}
          gcloud storage buckets update gs://${{ env.GCP_FRONTEND_BUCKET }} \
            --web-main-page-suffix=index.html \
            --web-error-page=404.html
