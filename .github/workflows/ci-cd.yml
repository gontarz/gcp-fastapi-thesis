name: CI/CD Pipeline with GKE & Static Frontend


# on: [push]
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  GCP_BUCKET_NAME: ${{ secrets.GCP_BUCKET_NAME }}
  GCP_DEFAULT_KMS_KEY: ${{ secrets.GCP_DEFAULT_KMS_KEY }}
  GCP_FRONTEND_BUCKET: ${{ secrets.GCP_PROJECT_ID }}-frontend
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_REGION: europe-central2
  CLUSTER_NAME: ${{ secrets.GKE_CLUSTER }}
  CLUSTER_ZONE: europe-central2-a
  IMAGE: gcs-fastapi-app
  RELEASE_NAME: gcs-fastapi-app
  CHART_PATH: ./helm/gcs-fastapi-app
#   DOMAIN: ${{ secrets.APP_DOMAIN }}
#   EMAIL: ${{ secrets.APP_EMAIL }}
  JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}

jobs:
#   test:
#     name: Run Unit Tests
#     runs-on: ubuntu-latest
#
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
#
#       - name: Set up Python
#         uses: actions/setup-python@v4
#         with:
#           python-version: 3.12
#
#       - name: Install dependencies
#         run: |
#           pip install --upgrade pip
#           pip install -r requirements.txt
#           pip install pytest
#
#       - name: Run tests
#         run: pytest tests/

  deploy:
    name: Deploy to GKE and Static Frontend
    runs-on: ubuntu-latest
#     needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev

      - name: Build and Push Docker image
        run: |
          docker build -t ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/gcs-fastapi-repo/${{ env.IMAGE }}:$GITHUB_SHA .
          docker push ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/gcs-fastapi-repo/${{ env.IMAGE }}:$GITHUB_SHA

#       - name: Get GKE credentials
#         run: |
#           gcloud container clusters get-credentials ${{ env.CLUSTER_NAME }} \
#             --zone ${{ env.CLUSTER_ZONE }} \
#             --project ${{ env.GCP_PROJECT_ID }}
      - name: Get GKE credentials
        uses: 'google-github-actions/get-gke-credentials@v2'
        with:
          cluster_name: ${{ env.CLUSTER_NAME }}
          location: ${{ env.CLUSTER_ZONE }}

      - name: Deploy backend with Helm
        run: |
          helm upgrade \
            --install ${{ env.RELEASE_NAME }} ${{ env.CHART_PATH }} \
            --set image.repository=${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/gcs-fastapi-repo/${{ env.IMAGE }} \
            --set image.tag=$GITHUB_SHA \
            --set env.JWT_SECRET_KEY=${{ env.JWT_SECRET_KEY }} \
            --set env.GCP_BUCKET_NAME=${{ env.GCP_BUCKET_NAME }} \
            --set env.GCP_PROJECT_ID=${{ env.GCP_PROJECT_ID }} \
            --set env.GCP_REGION=${{ env.GCP_REGION }} \
            --set env.GCP_DEFAULT_KMS_KEY=${{ env.GCP_DEFAULT_KMS_KEY }}

#             --set ingress.host=${{ env.DOMAIN }} \
#             --set ingress.email=${{ env.EMAIL }} \


      - name: Upload static frontend to GCS
        run: |
          gsutil -m cp -r frontend/* gs://${{ env.GCP_FRONTEND_BUCKET }}
          gsutil web set -m index.html -e index.html gs://${{ env.GCP_FRONTEND_BUCKET }}
